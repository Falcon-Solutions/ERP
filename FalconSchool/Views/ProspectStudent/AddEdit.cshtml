@model Falcon.Entity.Prospect.AddProspectStudentModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@section Styles{
    <link href="~/Content/libs/css/CustomDatePicker.css" rel="stylesheet" />
    <link href="~/Content/vendor/datepicker/tempusdominus-bootstrap-4.css" rel="stylesheet" />
    <link href="~/Content/vendor/fonts/themify-icons/themify-icons.css" rel="stylesheet" />
    <link href="~/Content/vendor/jquery/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/vendor/bootstrap-select/css/bootstrap-select.css" rel="stylesheet" />
    <link href="~/Content/vendor/inputmask/css/inputmask.css" rel="stylesheet" />
    <style>
        .pin-select span {
            width: 100% !important;
        }

        /*Make scrollbar hidden*/
        html {
            overflow: scroll;
        }

        ::-webkit-scrollbar {
            width: 0px;
            background: transparent; /* make scrollbar transparent */
        }

        .fix-min-height {
            min-height: 300px !important;
        }

        #upload {
            opacity: 0;
        }

        #upload-label {
            position: absolute;
            top: 50%;
            left: 1rem;
            transform: translateY(-50%);
        }

        .image-area {
            border: 2px dashed rgba(255, 255, 255, 0.7);
            /*padding: 1rem;*/
        }

            .image-area::before {
                content: 'Uploaded image result';
                color: #fff;
                font-weight: bold;
                text-transform: uppercase;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 0.8rem;
                z-index: 1;
            }

        #imageResult {
            max-height: 240px;
            max-width: 240px;
            z-index: 2;
            position: relative;
            border-style: outset;
        }
    </style>
}
<!-- ============================================================== -->
<!-- wrapper  -->
<!-- ============================================================== -->

<div class="container-fluid dashboard-content ">
    <!-- ============================================================== -->
    <!-- pageheader  -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="page-header">
                <h2 class="pageheader-title">Add Prospect Student</h2>
                <div class="page-breadcrumb">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">@Html.ActionLink("Prospect Student List", "List")</li>
                            <li class="breadcrumb-item active" aria-current="page">Add Prospect Student</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- end pageheader  -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Form Begin Create Prospect Student -->
    <!-- ============================================================== -->
    @using (Html.BeginForm("Create", "ProspectStudent", "HttpPost"))
    {
        <!-- Generate antiforge token to submit post form -->
        @Html.AntiForgeryToken()

        <!-- Form structure begin -->
        <!-- ============================================================== -->
        <!-- vertical tabs  -->
        <!-- ============================================================== -->

        <div class="tab-vertical col-10">
            <ul class="nav nav-tabs" id="myTab3" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="basic-details-tab" data-toggle="tab" href="#basic-details" role="tab" aria-controls="basic-details" aria-selected="true">Basic Details</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="address-details-tab" data-toggle="tab" href="#address-details" role="tab" aria-controls="address-details" aria-selected="false">Address  Details</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="parents-details-tab" data-toggle="tab" href="#parents-details" role="tab" aria-controls="parents-details" aria-selected="false">Parent Details</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="other-details-tab" data-toggle="tab" href="#other-details" role="tab" aria-controls="other-details" aria-selected="false">Other</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane fade fix-min-height show active" id="basic-details" role="tabpanel" aria-labelledby="basic-details-tab">
                    <div class="form-row">
                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.FirstName)
                            <div>
                                @Html.TextBox("First-Name","ABC", new { @class = "form-control" , @disabled = "disabled"})
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.MiddleName)
                            <div>
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.LastName)
                            <div>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-5">
                            @Html.Label("DoB")
                            <div class="input-group date" id="datetimepicker4" data-target-input="nearest">
                                @Html.TextBoxFor(model => model.DoB, new { @class = "form-control datetimepicker-input", autocomplete = "off", data_target = "#datetimepicker4" })
                                <div class="input-group-append" data-target="#datetimepicker4" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="far fa-calendar-alt"></i></div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-2">
                            @Html.Label("Gender")
                            <div>
                                @Html.DropDownList("Gender", new SelectList(ViewBag.GenderMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-2">
                            @Html.Label("Blood Group")
                            <div>
                                @Html.DropDownList("BloodGroup", new SelectList(ViewBag.BloodGrpMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.BloodGrpId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-3">
                            @Html.Label("Class Applying")
                            <div>
                                @Html.DropDownList("ClassList", new SelectList(ViewBag.ClassMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.Phone)
                            <div>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.Email)
                            <div>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-4">
                            @Html.LabelFor(model => model.AadharId)
                            <div>
                                @Html.EditorFor(model => model.AadharId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AadharId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-6">
                            @Html.Label("Upload Photo")
                            <div>
                                <div class="input-group mb-3 px-2 py-2 shadow-sm bg-light">
                                    @Html.TextBox("upload", null, new { @class = "form-control border-0", type = "file" , @onchange = "readURL(this);", @capture = "camera" })
                                    @*<input id="upload" type="file" onchange="readURL(this);" class="form-control border-0" capture="camera">*@
                                    <label id="upload-label" for="upload" class="font-weight-light text-muted">Please select file...</label>
                                    <div class="input-group-append">
                                        <label for="upload" class="btn btn-light m-0 px-4"> <i class="fas fa-cloud-alt mr-2 text-muted"></i><small class="text-uppercase font-weight-bold text-muted">Browse Photo</small></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-1">

                        </div>
                        <div class="form-group col-5">
                            <!-- Uploaded image area-->
                            @Html.Label("Image Preview")
                            <div>
                                <img id="imageResult" src="#" alt=""> <!--img-thumbnail mr-3-->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade fix-min-height" id="address-details" role="tabpanel" aria-labelledby="address-details-tab">
                    <div class="form-row">
                        <div id="card-current-address" class="card col-5">
                            <div class="card-header d-flex">
                                <h4 class="mb-0">Current Addresss</h4>
                                <div class="dropdown ml-auto">
                                    <a class="toolbar" href="#" role="button" id="dropdownMenuLink5" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Mark this as default communication address"><i class="fas fa-at"></i></a>
                                </div>
                            </div>
                            <div class="card-body">
                                @{
                                    Html.RenderPartial("_Address", "Current" as string);
                                }
                                <div class="">
                                    <div class="form-row">
                                        <label class="custom-control custom-checkbox">
                                            @Html.CheckBox("chkbx-copy-to-perm", new { @class = "form-control custom-control-input" })
                                            <span class="custom-control-label">Permanent address is same as current address</span>
                                            @*<input id="chkbx-copy-to-perm" type="checkbox" class="custom-control-input"><span class="custom-control-label">Permanent address is same as current address</span>*@
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-1">

                        </div>
                        <div id="card-permanent-address" class="card col-5">
                            <div class="card-header d-flex">
                                <h4 class="mb-0">Permenant Addresss</h4>
                                <div class="dropdown ml-auto">
                                    <a class="toolbar" href="#" role="button" id="dropdownMenuLink5" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Mark this as default communication address"><i class="fas fa-at"></i></a>
                                </div>
                            </div>
                            <div class="card-body">
                                @{
                                    Html.RenderPartial("_Address", "Permenent" as string);
                                }
                            </div>
                        </div>
                    </div>

                </div>
                <div class="tab-pane fade fix-min-height" id="parents-details" role="tabpanel" aria-labelledby="parents-details-tab">
                    <div class="form-row">
                        <div class="form-group col-3">
                            @Html.Label("Parent Name")
                            <div>
                                @Html.EditorFor(model => model.ParentName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-2">
                            @Html.Label("Parent Phone")
                            <div>
                                @Html.EditorFor(model => model.ParentPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-3">
                            @Html.Label("Parent Email")
                            <div>
                                @Html.EditorFor(model => model.ParentEmailId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentEmailId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-3">
                            @Html.Label("Parent Relationship")
                            <div>
                                @Html.DropDownList("Relationship", new SelectList(ViewBag.RelationshipMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.ParentRelationship, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-3">
                            @Html.Label("Parent Occupation")
                            <div>
                                @Html.DropDownList("Occupation", new SelectList(ViewBag.OccupationMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.ParentOccupation, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade fix-min-height" id="other-details" role="tabpanel" aria-labelledby="other-details-tab">
                    <div class="form-row">
                        <div class="form-group col-3">
                            @Html.Label("Religion")
                            <div>
                                @Html.DropDownList("Religion", new SelectList(ViewBag.ReligionMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-3">
                            @Html.Label("Caste")
                            <div>
                                @Html.DropDownList("Caste", new SelectList(ViewBag.CasteMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.CasteId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-3">
                            @Html.Label("Category")
                            <div>
                                @Html.DropDownList("Category", new SelectList(ViewBag.CategoryMaster, "Text", "Value"), new { @class = "form-control selectpicker", @data_size = "5", @data_flip = "false", @data_display = "static" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-6">
                            @Html.Label("Notes(if any)")
                            <div>
                                @Html.TextAreaFor(model => model.Notes, 5, 1, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PeremenantAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <!-- Row 8 begin :  create and back button  -->
                    <div class="form-row">
                        <div class="form-group col-auto mr-2">
                            <div>
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                @Html.ActionLink("Back to List", "List", null, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ============================================================== -->
        <!-- end basic tabs  -->
        <!-- ============================================================== -->
        <!-- Form structure end -->
    }

    <!-- ============================================================== -->
    <!-- Form End Create Prospect Student -->
    <!-- ============================================================== -->


</div>

<!-- ============================================================== -->
<!-- end wrapper  -->
<!-- ============================================================== -->
@section Scripts{


    <script src="~/Content/vendor/datepicker/moment.js"></script>
    <script src="~/Content/vendor/datepicker/tempusdominus-bootstrap-4.js"></script>
    <script src="~/Content/vendor/datepicker/datepicker.js"></script>

    <script src="~/Content/vendor/jquery/jquery-1.12.4.js"></script>
    <script src="~/Content/vendor/jquery/jquery-ui-1.12.1.js"></script>
    <script src="~/Content/vendor/inputmask/js/jquery.inputmask.bundle.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.17/js/bootstrap-select.js"></script>
    <script>
        $.fn.selectpicker.Constructor.BootstrapVersion = '4';
    </script>

    <script>
        

        $(document).ready(function () {


            //Hide permenant address if current address is same.
            $('#chkbx-copy-to-perm').click(function () {
                if ($(this).prop("checked") == true) {
                    $('#card-permanent-address').hide();
                    console.log("Checkbox is checked.");
                }
                else if ($(this).prop("checked") == false) {
                    $('#card-permanent-address').show();
                }
            });
        });

        /*  ==========================================
            SHOW UPLOADED IMAGE
        * ========================================== */
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imageResult')
                        .attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        $(function () {
            $('#upload').on('change', function () {
                readURL(input);
            });
        });

        /*  ==========================================
            SHOW UPLOADED IMAGE NAME
        * ========================================== */
        var input = document.getElementById('upload');
        var infoArea = document.getElementById('upload-label');

        input.addEventListener('change', showFileName);
        function showFileName(event) {
            var input = event.srcElement;
            var fileName = input.files[0].name;
            infoArea.textContent = fileName;
        }

        $(".pincode-mask").inputmask("999 999");

        function fillStates(element, stateDropDownId) {
            let countryId = parseInt($(element).val());

            if (countryId > 0) {
                $.ajax({
                    type: "GET",
                    url: "@(Url.Action("SearchStateByCountryId", "Common"))",
                    data: {
                        id: countryId
                    },
                    dataType: "json",
                    success: function (data) {
                        console.log(data);

                        $(stateDropDownId).empty();

                        $.each(data, function () {
                            $(stateDropDownId).append($("<option></option>").val(this['Value']).html(this['Text']));
                            $(stateDropDownId).prop('disabled', false);
                            $(stateDropDownId).selectpicker('refresh');

                        });
                    },
                });
            }
        }

        function fillCities(element, cityDropDownId) {
            let stateId = parseInt($(element).val());

            if (stateId > 0) {
                $.ajax({
                    type: "GET",
                    url: "@(Url.Action("SearchCityByStateId", "Common"))",
                    data: {
                        id: stateId
                    },
                    dataType: "json",
                    success: function (data) {
                        console.log(data);

                        $(cityDropDownId).empty();

                        $.each(data, function () {
                            $(cityDropDownId).append($("<option></option>").val(this['Value']).html(this['Text']));
                            $(cityDropDownId).prop('disabled', false);
                            $(cityDropDownId).selectpicker('refresh');

                        });
                    },
                });
            }
        }
    </script>

}

